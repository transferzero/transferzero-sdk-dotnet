/* 
 * TransferZero API
 *
 * Reference documentation for the TransferZero API V1
 *
 * OpenAPI spec version: 1.0
 * 
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

using System;
using System.IO;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Reflection;
using RestSharp;
using NUnit.Framework;

using TransferZero.Sdk.Client;
using TransferZero.Sdk.Api;
using TransferZero.Sdk.Model;

namespace TransferZero.Sdk.Test
{
    /// <summary>
    ///  Class for testing PayinMethodsApi
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the API endpoint.
    /// </remarks>
    [TestFixture]
    public class PayinMethodsApiTests
    {
        private PayinMethodsApi instance;

        /// <summary>
        /// Setup before each unit test
        /// </summary>
        [SetUp]
        public void Init()
        {
            instance = new PayinMethodsApi();
        }

        /// <summary>
        /// Clean up after each unit test
        /// </summary>
        [TearDown]
        public void Cleanup()
        {

        }

        /// <summary>
        /// Test an instance of PayinMethodsApi
        /// </summary>
        [Test]
        public void InstanceTest()
        {
            // TODO uncomment below to test 'IsInstanceOfType' PayinMethodsApi
            //Assert.IsInstanceOfType(typeof(PayinMethodsApi), instance, "instance is a PayinMethodsApi");
        }

        
        /// <summary>
        /// Test DeletePayinMethod
        /// </summary>
        [Test]
        public void DeletePayinMethodTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //Guid? payinMethodID = null;
            //var response = instance.DeletePayinMethod(payinMethodID);
            //Assert.IsInstanceOf<PayinMethodResponse> (response, "response is PayinMethodResponse");
        }
        
        /// <summary>
        /// Test GetPayinMethod
        /// </summary>
        [Test]
        public void GetPayinMethodTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //Guid? payinMethodID = null;
            //var response = instance.GetPayinMethod(payinMethodID);
            //Assert.IsInstanceOf<PayinMethodResponse> (response, "response is PayinMethodResponse");
        }
        
        /// <summary>
        /// Test PatchPayinMethod
        /// </summary>
        [Test]
        public void PatchPayinMethodTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //Guid? payinMethodID = null;
            //PayinMethod payinMethod = null;
            //var response = instance.PatchPayinMethod(payinMethodID, payinMethod);
            //Assert.IsInstanceOf<PayinMethodResponse> (response, "response is PayinMethodResponse");
        }
        
        /// <summary>
        /// Test RetryPayinMethod
        /// </summary>
        [Test]
        public void RetryPayinMethodTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //Guid? payinMethodID = null;
            //var response = instance.RetryPayinMethod(payinMethodID);
            //Assert.IsInstanceOf<PayinMethodResponse> (response, "response is PayinMethodResponse");
        }
        
    }

}
